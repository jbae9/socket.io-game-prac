<!DOCTYPE html>
<html lang="en">

<script src="/socket.io/socket.io.js"></script>
<style>
#gameScreen {
  display: none;
}
</style>

<body>
  <section>
    <div>
      <div id="initialScreen">       
            <h1>Multiplayer Game</h1>
            <button type="submit" class="btn btn-success" id="newGameButton">
              Create New Game
            </button>
            <div>OR</div>
            <div class="form-group">
              <input type="text" placeholder="Enter Game Code" id="gameCodeInput"/>
            </div>
            <button type="submit" class="btn btn-success" id="joinGameButton">
              Join Game
            </button>       
      </div>
      <!-- 게임 스크린 화면 -->
      <div id="gameScreen">       

          <h1>Your game code is: <span id="gameCodeDisplay"></span></h1>

          <h1> SCORE BLUE :  <span id="gameScoreBlueDisplay"></span>
              VS    SCORE RED  :  <span id="gameScoreRedDisplay"></span>          
          </h1>
          <canvas id="canvas"></canvas>       
      </div>
    </div>
  </section>

</body>

<script>
  const socket = io();

  socket.on('init', handleInit);
  socket.on('gameState', handleGameState);
  socket.on('gameOver', handleGameOver);
  socket.on('gameCode', handleGameCode);
  socket.on('unknownCode', handleUnknownCode);
  socket.on('tooManyPlayers', handleTooManyPlayers);

  const gameScreen = document.getElementById('gameScreen');
  const initialScreen = document.getElementById('initialScreen');
  const newGameBtn = document.getElementById('newGameButton');
  const joinGameBtn = document.getElementById('joinGameButton');
  const gameCodeInput = document.getElementById('gameCodeInput');
  const gameCodeDisplay = document.getElementById('gameCodeDisplay');

  const gameScoreRedDisplay = document.getElementById('gameScoreRedDisplay');
  const gameScoreBlueDisplay = document.getElementById('gameScoreBlueDisplay');

  newGameBtn.addEventListener('click', newGame);
  joinGameBtn.addEventListener('click', joinGame);


  function newGame() {
    socket.emit('newGame');
    init();
  }

  function joinGame() {
    const code = gameCodeInput.value;
    socket.emit('joinGame', code);
    init();
  }

  let canvas, ctx;
  let playerNumber;
  let gameActive = false;

  function init() {
    initialScreen.style.display = "none";
    gameScreen.style.display = "block";

    canvas = document.getElementById('canvas');
    ctx = canvas.getContext('2d');

    canvas.width = canvas.height = 600;

    ctx.fillStyle = 'black';
    ctx.fillRect(0, 0, canvas.width, canvas.height);

    document.addEventListener('keydown', keydown);
    gameActive = true;
  }

  function keydown(e) {
    socket.emit('keydown', e.keyCode);
  }

  function paintGame(state) {

    console.log(state);
    ctx.fillStyle = 'black';
    ctx.fillRect(0, 0, canvas.width, canvas.height);

    const box = state.box;
    const gridsize = state.gridsize;
    const size = canvas.width / gridsize;

    ctx.fillStyle = 'yellow';
    ctx.fillRect(box.x * size, box.y * size, size, size);

    paintPlayer(state.players[0], size, 'blue');
    paintPlayer(state.players[1], size, 'red');

    gameScoreBlueDisplay.innerText = state.scoreblue;
    gameScoreRedDisplay.innerText = state.scorered;
  }

  function paintPlayer(playerState, size, colour) {
    
    ctx.fillStyle = colour;    
    ctx.fillRect(playerState.pos.x * size, playerState.pos.y * size, size, size);
    
  }

  function handleInit(number) {
    playerNumber = number;
  }

  function handleGameState(gameState) {
    console.log(gameState)
    if (!gameActive) {
        return;
    }
    gameState = JSON.parse(gameState);
    requestAnimationFrame(() => paintGame(gameState));
  }

  function handleGameOver(data) {
    if (!gameActive) {
        return;
    }
    data = JSON.parse(data);

    gameActive = false;

    if (data.winner === playerNumber) {
        alert('You Win!');
    } else {
        alert('You Lose :(');
    }
  }

  function handleGameCode(gameCode) {
    gameCodeDisplay.innerText = gameCode;
  }

  function handleUnknownCode() {
    reset();
    alert('Unknown Game Code')
  }

  function handleTooManyPlayers() {
    reset();
    alert('This game is already in progress');
  }

  function reset() {
    playerNumber = null;
    gameCodeInput.value = '';
    initialScreen.style.display = "block";
    gameScreen.style.display = "none";
  }

</script>

</html>